priceData <- fread(file = '../5_Data/GIEWS_Monthly_Maize_ImportCtys.csv')

PriceSummary <- priceData %>%
  mutate(Country = ifelse(Country == 'Swaziland', 'Eswatini', Country)) %>%
  mutate(st1 = unlist(gregexpr(pattern ='Maize', ID)),
         st2 = unlist(gregexpr(pattern ='real.kg', ID))) %>%
  mutate(Currency = substr(ID, st1 + 7, st2 - 2)) %>%
  group_by(Country) %>%
  summarise(Unit = first(Currency),
            Min = min(Value), Max = max(Value), Median = median(Value),
            Mean = mean(Value), S.D. = sd(Value), C.V. = sd(Value)/mean(Value),
            Period = paste0(min(Year),'-',max(Year))) %>%
  mutate_at(vars(Min:C.V.), round, digits = 2)

stargazer(PriceSummary, summary = F)

#---------------------------------------------------------------------------------------#
priceVol <- fread('../5_Data/FAOMaizePriceMktYearVAR_LocalCurrency_Mar2020.csv')

PriceVolSummary <- priceVol %>%
  mutate(Country = ifelse(Country == 'Swaziland', 'Eswatini', Country)) %>%
  mutate(Country = gsub('\\.', ' ', Country)) %>%
  select(Country, PriceCV:PriceIQR) %>%
  gather(Variable, Value, 2:5) %>%
  group_by(Country, Variable) %>%
  summarise(Mean = round(mean(Value), 2)) %>%
  spread(Variable, Mean) %>%
  select(Country, PriceCV, SDlogChange, PriceGap, PriceIQR)

stargazer(PriceVolSummary, summary = F)

length(unique(priceData$City))

# Plot CV and SD
g <-
  PriceVolSummary %>%
  select(Country, PriceCV, SDlogChange) %>%
  gather(Variable, Value, 2:3) %>%
  ggplot(data = .) +
  geom_bar(aes(Country, Value, fill = Variable), stat = 'identity', position = position_dodge()) +
  scale_fill_manual(values = c('grey10', 'grey60'),
                    labels = c('Coefficient of variation', 'standard deviation of returns'),
                    name = '') +
  scale_y_continuous(limits = c(0, 0.22)) +
  labs(x= '', y = 'Average intra-annual maize price variability, 2000/01 -- 2017/18') +
  theme_bw() +
  theme(legend.position = c(0.5, 0.95),
        legend.direction = 'horizontal',
        axis.text.x = element_text(angle = 45),
        axis.text = element_text(color = 'black'))

g

ggsave(g, filename = '../4_TablesFigures/Fig.AvgPriceVariability.png', width = 200, height = 160, units = 'mm')




#---------------------------------------------------------------------------------------#
# Market names by country
mktnames <- priceData %>%
  select(Country, City) %>%
  mutate(Country = gsub('\\.', ' ', Country),
         City = gsub('\\.', ' ', City)) %>%
  distinct() %>%
  group_by(Country) %>%
  summarise(City = paste0(City, collapse = ', '))

mktnames
stargazer(mktnames, summary = F)


#--------------------------------------------------------------------------------------#
# Price seasonality
splineTrendFunc <- function(x, y) lm(x ~ bs(y, 3, degree = 2))$residual

PriceDataSeason1 <- priceData %>%
  group_by(ID) %>%
  arrange(TimeFM, .by_group = TRUE) %>%
  mutate(Trend = 1:n()) %>%
  mutate(DeTrend = splineTrendFunc(logValue, Trend)) %>%
  mutate(cosValue = cos(Month*pi/6), sinValue = sin(Month*pi/6))
# test <- filter(priceDataSeason1, grepl('Angola..Retail..Luanda..Maize..flour...Kwanza.real.kg.Commo', ID))
# plot(test$logValue, type = 'l')
# lines(test$logValue - test$DeTrend, col = 'red')

PriceDataSeason1 <- PriceDataSeason1 %>%
  do(fitSeason = lm(formula(paste0('DeTrend ~ cosValue + sinValue')), data = .))

PriceDataSeason2 <- augment(PriceDataSeason1, fitSeason) %>%
    ungroup() %>%
    bind_cols(., priceData)

PriceDataSeason2Stat <- glance(PriceDataSeason1, fitSeason)

# Visualize the price seasonality.
g <- PriceDataSeason2 %>%
  mutate(Country = gsub('\\.', ' ', Country)) %>%
  group_by(Country, ID, Month) %>%
  summarise(Spline.fitted = mean(.fitted)) %>%
  ggplot(data = .) +
  geom_line(aes(Month, Spline.fitted, group = ID)) +
  geom_hline(yintercept = 0, lty = 2) +
  scale_x_continuous(breaks = seq(1, 12, 2)) +
  facet_wrap(~ Country, scales = 'free_y', ncol = 4) +
  labs(x = '', y = 'Fitted seasonal cycles in logged maize prices') +
  theme_light() +
  theme(legend.position = '',
        strip.text = element_text(color = 'black'),
        strip.background = element_rect(fill = 'white', color = 'black'))
g

ggsave(g, filename = '../4_TablesFigures/Fig.Seasonality.png', width = 240, height = 240, units = 'mm')


# PriceDataSeason2 %>%
#   filter(Country == 'Philippines', grepl('1005_12', ID)) %>%
#   group_by(Country, ID, Month) %>%
#   summarise(Spline.fitted = mean(.fitted)) %>%
#   ggplot(data = .) +
#   geom_line(aes(Month, Spline.fitted, col = ID))

ControlData <- fread('../5_Data/RegressionAnnualData_May2019.csv')

# Analyze imports of countries with and without seasonality.
NetImports <- ControlData %>%
  filter(mktYear >= 2000, mktYear <= 2017) %>%
  group_by(ISO) %>%
  summarise(NetImportRatio = 100*mean(NetImportRatio, na.rm = T))


priceSeasonality <- PriceDataSeason2 %>%
  mutate(Country = gsub('\\.', ' ', Country)) %>%
  group_by(ID, Country) %>%
  mutate(maxPrice = max(.fitted), minPrice = min(.fitted)) %>%
  summarise(maxPrice = mean(maxPrice), minPrice = mean(minPrice)) %>%
  mutate(seasonGap = exp(maxPrice - minPrice) - 1) %>%
  group_by(Country) %>%
  summarise(seasonGap = 100*mean(seasonGap)) %>%
  ungroup() %>%
  mutate(ISO = countrycode::countrycode(Country, 'country.name', 'iso3c')) %>%
  left_join(., NetImports, by = 'ISO') %>%
  select(Country, seasonGap, NetImportRatio) %>%
  mutate(Country = ifelse(Country == 'Swaziland', 'Eswatini', Country))
# mutate(sigGroup = ifelse(Pvalue <= 0.1, 'sig', 'notsig'),
#        Country = ifelse(Pvalue > 0.1, paste0('(', Country, ')'), Country))

g <-
  ggplot(data = priceSeasonality) +
  geom_point(aes(NetImportRatio, seasonGap), size = 0.5) +
  geom_text(aes(NetImportRatio, seasonGap, label = Country)) +
  geom_smooth(aes(NetImportRatio, seasonGap), lty = 2, method = 'lm', color = 'black', se = F) +
  scale_x_continuous(breaks = seq(0, 80, by = 10)) +
  scale_y_continuous(breaks = seq(0, 50, by = 5)) +
  labs(x = 'Average ratio of net maize imports to maize consumption, 2000/01 -- 2017/18', y = 'Average maize price seasonality (%), 2000/01 -- 2017/18') +
  theme_light() +
  theme(legend.position = '',
        panel.grid.major = element_blank(),
        axis.text = element_text(color = 'black'))

g

ggsave(g, filename = '../4_TablesFigures/Fig.SeasonalityImports.png',
       width = 200, height = 160, units = 'mm')
