rm(list = ls())
library(dplyr)
library(tidyr)
library(data.table)
library(countrycode)
library(lfe)
library(mgcv)
library(ggplot2)
library(gridExtra)
library(texreg)
library(grid)
#library(stargazer)
setwd('~')

#-------------------------------------------------------------------------------------------------------------------#
# AIC for analyzing the best trend specification for maize yields.
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#
PriceVolDat <- fread('./ExtShock/5_Data/FAOMaizePriceMktYearVAR_May2019.csv') %>%
  mutate(Country = ifelse(Country == 'Swaziland', 'Eswatini', Country),
         ISO = ifelse(Country == 'Swaziland', 'SWZ', ISO))

DomYieldShock <- fread(input = './ExtShock/5_Data/FAOSTAT_MaizeYield_May2019.csv') %>%
  dplyr::filter(!Area %in% c('China', 'Ethiopia PDR', 'Southern Africa'),
                Element %in% c('Yield'),
                Item == 'Maize') %>%
  mutate(ISO = countrycode(Area, 'country.name', 'iso3c'),
         ISO = ifelse(Area == 'Eswatini', 'SWZ', ISO)) %>%
  filter(ISO %in% unique(PriceVolDat$ISO)) %>%
  mutate(Year = as.numeric(Year), Value = as.numeric(Value))

AICFunc <- function(selCty){
  subData <- DomYieldShock %>% filter(ISO == selCty)

  linearTD <- lm(Value ~ poly(Year, 1), data = subData)
  quadraticTD <- lm(Value ~ poly(Year, 2), data = subData)
  cubicTD <- lm(Value ~ poly(Year, 3), data = subData)

  AICout <- data.frame(selCty,
                       Linear = round(AIC(linearTD), 1),
                       Quadratic = round(AIC(quadraticTD), 1),
                       Cubic = round(AIC(cubicTD), 1))
  AICout
}

tableOut <- lapply(unique(PriceVolDat$ISO), AICFunc) %>%
  bind_rows() %>%
  mutate(Country = countrycode(selCty, 'iso3c', 'country.name')) %>%
  arrange(Country) %>%
  select(Country, 2:4)

stargazer(tableOut, summary = F, rownames = F, digits = 1)

#-------------------------------------------------------------------------------------------------------------------#
# Merge with other data at annual basis.
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#
rm(list = ls())

PriceVolDat <- fread('../5_Data/FAOMaizePriceMktYearVAR_LocalCurrency_Mar2020.csv') %>%
  mutate(Country = ifelse(Country == 'Swaziland', 'Eswatini', Country),
         ISO = ifelse(Country == 'Swaziland', 'SWZ', ISO))

ForeignYieldShock <- fread('../5_Data/ForeignYieldShock_May2019.csv')
ControlData <- fread('../5_Data/RegressionAnnualData_May2019.csv')

# Construct domestic yield shocks.
quadraticTrendFunc <- function(x, y) {
  reg <- lm(x ~ poly(y, 2))
  reg$residual/reg$fitted
}

cubicTrendFunc <- function(x, y) {
  reg <- lm(x ~ poly(y, 2))
  reg$residual/reg$fitted
}

DomYieldShock <- fread(input = '../5_Data/FAOSTAT_MaizeYield_May2019.csv') %>%
  dplyr::filter(!Area %in% c('China', 'Ethiopia PDR', 'Southern Africa'),
                Element %in% c('Yield'),
                Item == 'Maize') %>%
  mutate(ISO = countrycode(Area, 'country.name', 'iso3c'),
         ISO = ifelse(Area == 'Eswatini', 'SWZ', ISO)) %>%
  filter(ISO %in% c(unique(PriceVolDat$ISO), 'USA')) %>%
  #filter(ISO %in% c(unique(PriceVolDat$ISO)) %>%
  mutate(Year = as.numeric(Year), Value = as.numeric(Value)) %>%
  group_by(Area, Element) %>%
  mutate(Value = cubicTrendFunc(Value, Year)) %>%
  dplyr::select(ISO, Year, Area, Element, Value) %>%
  spread(Element, Value) %>%
  dplyr::rename(DomYieldShock = Yield)


# Get the world bank data
library(wbstats)

WorldBankDat <- wb(indicator = c('NY.GDP.PCAP.KD', 'FR.INR.RINR'), #"NY.GDP.PCAP.KD",
                   startdate = 1980, enddate = 2017, country = unique(PriceVolDat$ISO))

WorldBankDatClean <- WorldBankDat %>%
  dplyr::select(iso3c, date, value, indicatorID) %>%
  mutate(date = as.numeric(date)) %>%
  spread(indicatorID, value) %>%
  dplyr::rename(perCapitaGDP = NY.GDP.PCAP.KD,
                IntRate = FR.INR.RINR) %>%
  group_by(iso3c) %>%
  mutate(perCapitaGDPShock = quadraticTrendFunc(perCapitaGDP, date))

# test <- wbindicators(lang = c("en"))
# test1 <- test %>%
#   filter(grepl('interest', indicator))

RegressionDat <- PriceVolDat %>%
  filter(mktYear < 2018, mktYear >= 2000) %>%
  left_join(., DomYieldShock, by = c('mktYear' = 'Year', 'ISO')) %>%
  left_join(., ForeignYieldShock, by = c('mktYear' = 'Year', 'ISO' = 'PartnerISO')) %>%
  left_join(., WorldBankDatClean, by = c('mktYear' = 'date', 'ISO' = 'iso3c')) %>%
  mutate(DomYieldDev.Dir = ifelse(DomYieldShock > 0, 'Pos', 'Neg'),
         ExtYieldDev.2YearAveDir = ifelse(ExtYieldDev.2YearAve > 0, 'Pos', 'Neg'),
         ExtYieldDev.3YearAveDir = ifelse(ExtYieldDev.3YearAve > 0, 'Pos', 'Neg'),
         ExtYieldDev.4YearAveDir = ifelse(ExtYieldDev.4YearAve > 0, 'Pos', 'Neg'),
         ExtYieldDev.5YearAveDir = ifelse(ExtYieldDev.5YearAve > 0, 'Pos', 'Neg'),
         ExtYieldDev.topDir = ifelse(ExtYieldDev.top > 0, 'Pos', 'Neg'),
         ExtYieldDev.StaticDir = ifelse(ExtYieldDev.Static > 0, 'Pos', 'Neg'),
         ExtYieldDev.DomForDir = ifelse(ExtYieldDev.5YearAve*DomYieldShock > 0, 'Pos', 'Neg')) %>%
  left_join(., ControlData, by = c('mktYear', 'ISO')) %>%
  #drop_na() %>%
  mutate(tmpGroup = ifelse(Country %in% c('Burundi', 'Chad', 'Rwanda'), 'landloacked', 'coastal'))

write.csv(RegressionDat, file = '../5_Data/RegressionDataV2_Mar2020.csv', row.names = F)

#-------------------------------------------------------------------------------------------------------------------#
# Regression
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#
rm(list=ls())
RegressionDat <- fread('../5_Data/RegressionDataV2_Mar2020.csv')

# Summary statistics.
sumData <- RegressionDat %>%
  select(PriceCV, SDlogChange,
         ExtYieldDev.4YearAve,
         DomYieldShock,
         BeginStockRatio, REER_SD, perCapitaGDPShock) %>%
  drop_na()

stargazer::stargazer(sumData, summary = T, digits = 2, omit.summary.stat = c("p25", "p75"), type = 'text')

# selCty <- RegressionDat %>%
#   filter(Country == 'Mozambique') %>%
#   dplyr::select(Country, DomYieldShock, mktYear)
#
# DomYieldShockData <- RegressionDat %>%
#   group_by(Country, mktYear) %>%
#   summarise(DomYieldShock = mean(DomYieldShock))

CVReg1 <- felm(PriceCV ~ DomYieldShock + ExtYieldDev.4YearAve + BeginStockRatio+ REER_SD + perCapitaGDPShock|
               0| 0 | Country,
             exactDOF = 'rM',
             data = RegressionDat)

CVReg2 <- felm(PriceCV ~ DomYieldShock + ExtYieldDev.4YearAve + BeginStockRatio+ REER_SD + perCapitaGDPShock|
               factor(Country) + factor(City)| 0 | Country,
             exactDOF = 'rM',
             data = RegressionDat)

CVReg3 <- felm(PriceCV ~ DomYieldShock + ExtYieldDev.4YearAve + BeginStockRatio+ REER_SD + perCapitaGDPShock|
                 factor(Country) + factor(City) + factor(mktYear)| 0 | Country,
               exactDOF = 'rM',
               data = RegressionDat)


SDReg1 <- felm(SDlogChange ~ DomYieldShock + ExtYieldDev.4YearAve + BeginStockRatio+ REER_SD + perCapitaGDPShock|
               0| 0 | Country,
             exactDOF = 'rM',
             data = RegressionDat)

SDReg2 <- felm(SDlogChange ~ DomYieldShock + ExtYieldDev.4YearAve + BeginStockRatio+ REER_SD + perCapitaGDPShock|
                 factor(Country) + factor(City)| 0 | Country,
               exactDOF = 'rM',
               data = RegressionDat)

SDReg3 <- felm(SDlogChange ~ DomYieldShock + ExtYieldDev.4YearAve + BeginStockRatio+ REER_SD + perCapitaGDPShock|
                 factor(Country) + factor(City) + factor(mktYear)| 0 | Country,
               exactDOF = 'rM',
               data = RegressionDat)


# Report the results
texreg(l = list(CVReg1, CVReg2, CVReg3, SDReg1, SDReg2, SDReg3), stars = c(0.01, 0.05, 0.1),
       omit.coef = '(Intercept)',
       custom.coef.names = c('Domestic yield shock', 'Foreign yield shock',
                             'Beging stock-to-use ratio', 'Exchange rate variability', 'Per capita GDP shock'),
       #custom.model.names = c('C.V.', 'S.D. of Return'),
       caption = "Regressing intra-annual maize price variability on domestic and foreign maize yield shocks",
       caption.above = TRUE,
       inline.css = FALSE, doctype = TRUE, html.tag = TRUE,
       head.tag = TRUE, body.tag = TRUE)


# Linear regression with kinks
regX <- felm(PriceCV ~ DomYieldShock + DomDummy:DomYieldShock + ExtYieldDev.4YearAve + BeginStockRatio+ REER_SD + perCapitaGDPShock|
               factor(Country) + factor(City) + factor(MarketChain) + factor(mktYear)| 0 | Country,
             exactDOF = 'rM',
             data = mutate(RegressionDat, DomDummy = ifelse(DomYieldShock >= 0.2, 1, 0)))

summary(regX)

library(plm)

dataX <- RegressionDat %>%
  mutate(DomDummy = ifelse(DomYieldShock >= 0.15, 1, 0),
         ForDummy = as.factor(ifelse(DomYieldShock <= -0.1, 1, 0)))

table(index(dataX), useNA = "ifany")

test <- filter(dataX, ID == 'Honduras..Wholesale..National.Average..Maize..white...Lempira.real.kg.Commodity.Code..1005_12')

dataX <- pdata.frame(dataX, index = c('ID', 'mktYear'))

gmmreg1 <- pgmm(PriceCV ~ lag(deTrendCubic.SD, 1) + DomYieldShock + DomDummy:DomYieldShock +
                  ExtYieldDev.4YearAve +
                  BeginStockRatio+ REER_SD + perCapitaGDPShock| lag(deTrendCubic.SD, 2:99),
                data = dataX, effect = 'twoways', model = 'twosteps', robust = F)


gmmreg2 <- pgmm(SDlogChange ~ lag(SDlogChange, 1) + DomYieldShock + DomDummy:DomYieldShock +
                  ExtYieldDev.4YearAve +
                  BeginStockRatio+ REER_SD + perCapitaGDPShock| lag(deTrendCubic.SD, 2:99),
                data = dataX, effect = 'twoways', model = 'twosteps', robust = F)


gmmreg3 <- pgmm(logValue.Gap ~ lag(logValue.Gap, 1) + DomYieldShock + DomDummy:DomYieldShock +
                  ExtYieldDev.4YearAve +
                  BeginStockRatio+ REER_SD + perCapitaGDPShock| lag(deTrendCubic.SD, 2:99),
                data = dataX, effect = 'twoways', model = 'twosteps', robust = F)


gmmreg4 <- pgmm(logValue.IQR ~ lag(logValue.IQR, 1) + DomYieldShock + DomDummy:DomYieldShock +
                  ExtYieldDev.4YearAve +
                  BeginStockRatio+ REER_SD + perCapitaGDPShock| lag(deTrendCubic.SD, 2:99),
                data = dataX, effect = 'twoways', model = 'twosteps', robust = F)


summary(gmmreg1)

summary(gmmreg2)

summary(gmmreg3)

summary(gmmreg4)



# Semi-parametric regression.
ksel <- 10
#summary(RegressionDat)
gamReg1 <- mgcv::gam(PriceCV ~ s(DomYieldShock, bs = 'cr', k = ksel) +
                       s(ExtYieldDev.4YearAve, bs = 'cr', k = ksel) +
                       REER_SD + BeginStockRatio + perCapitaGDPShock +
                       factor(Country) + factor(City) + factor(mktYear),
                     data = filter(RegressionDat, DomYieldShock >= -0.6))

gamReg2 <- mgcv::gam(SDlogChange ~ s(DomYieldShock, bs = 'cr', k = ksel) +
                       s(ExtYieldDev.4YearAve, bs = 'cr', k = ksel) +
                       REER_SD + BeginStockRatio + perCapitaGDPShock +
                       factor(Country) + factor(City) + factor(mktYear),
                     data = filter(RegressionDat, DomYieldShock >= -0.6))


summary(gamReg1)
dev.off()

plot(gamReg1, residuals = T, pages = 1)

anova(gamReg1, mgcv::gam(PriceCV ~ DomYieldShock +
                           ExtYieldDev.4YearAve +
                           REER_SD + BeginStockRatio + perCapitaGDPShock +
                           factor(Country) + factor(City) + factor(mktYear),
                         data = filter(RegressionDat, DomYieldShock >= -0.6)), test = 'F')


plotDataFunc <- function(object, k){
  dat <- invisible(plot(object, residuals = T, select = k))
  datOut1 <- data.frame(x = dat[[k]]$x, y = dat[[k]]$fit, ysd = dat[[k]]$se)
  datOut1
}

# Plots for domestic yeild shocks.
DomDataM1 <- plotDataFunc(gamReg1, k = 1) %>% mutate(measure = 'cv', source = 'dom')
DomDataM2 <- plotDataFunc(gamReg2, k = 1) %>% mutate(measure = 'sd', source = 'dom')

ForDataM1 <- plotDataFunc(gamReg1, k = 2) %>% mutate(measure = 'cv', source = 'fore')
ForDataM2 <- plotDataFunc(gamReg2, k = 2) %>% mutate(measure = 'sd', source = 'fore')

summary(lm(y ~ x, data = ForDataM1))
summary(lm(y ~ x, data = ForDataM2))

# slope
subdata <- filter(DomDataM1, x <= -0.1)
(subdata$y[1] - subdata$y[nrow(subdata)])/(subdata$x[1] - subdata$x[nrow(subdata)])

subdata <- filter(DomDataM1, x >= 0.2)
(subdata$y[1] - subdata$y[nrow(subdata)])/(subdata$x[1] - subdata$x[nrow(subdata)])


#g <-
plotdata <- bind_rows(DomDataM1, DomDataM2, ForDataM1, ForDataM2)

g <-
ggplot(data = plotdata) +
  geom_line(aes(x, y, lty = measure)) +
  geom_ribbon(aes(x = x, ymin = y - ysd, ymax = y + ysd, fill = measure), alpha = 0.5) +
  scale_x_continuous(breaks = seq(-0.5, 0.6, by = 0.1)) +
  scale_y_continuous(breaks = seq(-0.14, 0.14, by = 0.02)) +
  scale_linetype_manual(values = c(1, 2),
                        labels = c('Coefficient of variation', 'Standard deviation of returns'),
                        name = '') +
  scale_fill_manual(values = c('grey20', 'grey60'),
                    labels = c('Coefficient of variation', 'Standard deviation of returns'),
                    name = '') +
  facet_wrap(~ source, scales = 'free',
             labeller = as_labeller(c(dom = 'A. Domestic yield shocks', fore = 'B. Foreign yield shocks'))) +
  labs(x = 'Maize yield shocks (deviations from trend)', y = 'Fitted smooth functions') +
  theme_classic() +
  theme(axis.text = element_text(color = 'black'),
        title = element_text(size = 10),
        legend.position = 'bottom',
        strip.background = element_blank()) +
  geom_segment(data = subset(plotdata, source == "dom"), aes(-0.5, y = 0.09, xend = -0.1, yend = 0.09), lty = 3) +
  geom_segment(data = subset(plotdata, source == "dom"), aes(-0.1, y = 0, xend = -0.1, yend = 0.09), lty = 3) +
  geom_text(data =subset(plotdata, source == "dom"), aes(x = -0.2, y = 0.095), label = 'slope: -0.23', size = 3) +

  geom_segment(data = subset(plotdata, source == "dom"), aes(0.2, y = 0.082, xend = 0.2, yend = -0.02), lty = 3) +
  geom_segment(data = subset(plotdata, source == "dom"), aes(0.2, y = 0.084, xend = 0.57, yend = 0.084), lty = 3) +
  geom_text(data =subset(plotdata, source == "dom"), aes(x = 0.3, y = 0.09), label = 'slope: 0.28', size = 3) +

  geom_segment(data = subset(plotdata, source == "fore"), aes(0.2, y = -0.035, xend = 0.2, yend = 0.02), lty = 3) +
  geom_segment(data = subset(plotdata, source == "fore"), aes(-0.1, y = 0.02, xend = 0.2, yend = 0.02), lty = 3) +
  geom_text(data =subset(plotdata, source == "fore"), aes(x = 0.1, y = 0.025), label = 'slope: -0.18', size = 3)

g

ggsave(filename = '../4_TablesFigures/Fig_SmoothFitMain.png', plot = g, width = 200, height = 120, units = 'mm')

# Robustness analysis.
### Alternative choices of ksel:
r1func <- function(ksel0){
  gamRegKsel0 <- gam(deTrendCubic.SD ~ s(DomYieldShock, bs = 'cr', k = ksel0) +
                       s(ExtYieldDev.4YearAve, bs = 'cr', k = ksel0) +
                       REER_SD + BeginStockRatio + perCapitaGDPShock +
                       factor(Country) + factor(City) + factor(MarketChain) + factor(mktYear),
                     data = filter(RegressionDat, DomYieldShock >= -0.6))
  plotDataFunc(gamRegKsel0, k = 1) %>% mutate(Label = paste0(ksel0))
}
plotDataBase1 <- plotDataFunc(gamReg1, k = 1)
plotData1 <- lapply(11:30, r1func) %>% bind_rows()
#plotData12 <- plotData1 %>% mutate(Label = as.numeric(Label)) %>% filter(Label >= 20)

g1 <-
  ggplot() +
  #geom_line(data = plotDataBase1, aes(x, y)) +
  #geom_line(data = plotDataBase1, aes(x, y + ysd), lty = 2) +
  #geom_line(data = plotDataBase1, aes(x, y - ysd), lty = 2) +
  geom_line(data = plotData1, aes(x, y, group = Label)) +
  scale_x_continuous(breaks = seq(-0.5, 0.6, by = 0.1)) +
  scale_y_continuous(breaks = seq(-0.2, 0.12, by = 0.02)) +
  labs(x = 'Domestic maize yield shocks', y = 'Fitted value of the smooth function',
       title = 'A1. Alternative choices of base dimensions: \ndomestic yield shocks') +
  theme_classic() +
  theme(axis.text = element_text(color = 'black'),
        title = element_text(size = 10)) +
  annotate("text", x = 0.15, y = 0.03, label = "basis dimension > 20", angle = 0, size=5,
           colour='black') +
  geom_segment(aes(x = 0.18, y = 0.025, xend = 0.1, yend = 0.01),
               colour='black', size = 0.5, arrow = arrow(length = unit(0.3, "cm")))

g1

r2func <- function(ksel0){
  gamRegKsel0 <- gam(deTrendCubic.SD ~ s(DomYieldShock, bs = 'cr', k = ksel0) +
                       s(ExtYieldDev.4YearAve, bs = 'cr', k = ksel0) +
                       REER_SD + BeginStockRatio + perCapitaGDPShock +
                       factor(Country) + factor(City) + factor(MarketChain) + factor(mktYear),
                     data = filter(RegressionDat, DomYieldShock >= -0.6))
  plotDataFunc(gamRegKsel0, k = 2) %>% mutate(Label = paste0(ksel0))
}

plotDataBase2 <- plotDataFunc(gamReg1, k = 2)
plotData2 <- lapply(11:30, r2func) %>% bind_rows()

g2 <-
  ggplot() +
  #geom_line(data = plotDataBase2, aes(x, y)) +
  #geom_line(data = plotDataBase2, aes(x, y + ysd), lty = 2) +
  #geom_line(data = plotDataBase2, aes(x, y - ysd), lty = 2) +
  geom_line(data = plotData2, aes(x, y, group = Label)) +
  scale_x_continuous(breaks = seq(-0.5, 0.6, by = 0.1)) +
  scale_y_continuous(breaks = seq(-0.2, 0.12, by = 0.02)) +
  labs(x = 'Foreign maize yield shocks', y = 'Fitted value of the smooth function',
       title = 'A2. Alternative choices of base dimensions: \nforeign yield shocks') +
  theme_classic() +
  theme(axis.text = element_text(color = 'black'),
        title = element_text(size = 10)) +
  annotate("text", x = 0.15, y = 0.035, label = "basis dimension > 20", angle = 0, size=5,
           colour='black') +
  geom_segment(aes(x = 0.14, y = 0.025, xend = 0.1, yend = 0.01),
               colour='black', size = 0.5, arrow = arrow(length = unit(0.3, "cm")))

g2


### Alternative trends:
gamRegRB1 <- gam(deTrendCubic.SD ~ s(DomYieldShock, bs = 'cr', k = ksel) +
                   s(ExtYieldDev.4YearAve, bs = 'cr', k = ksel) +
                   REER_SD + BeginStockRatio + perCapitaGDPShock +
                   factor(Country) + factor(City) + factor(MarketChain) + factor(mktYear),
                 data = filter(RegressionDat, DomYieldShock >= -0.6))

gamRegRB2 <- gam(deTrendHP.SD ~ s(DomYieldShock, bs = 'cr', k = ksel) +
                   s(ExtYieldDev.4YearAve, bs = 'cr', k = ksel) +
                   REER_SD + BeginStockRatio + perCapitaGDPShock +
                   factor(Country) + factor(City) + factor(MarketChain) + factor(mktYear),
                 data = filter(RegressionDat, DomYieldShock >= -0.6))

gamRegRB3 <- gam(deTrendLinear.SD ~ s(DomYieldShock, bs = 'cr', k = ksel) +
                   s(ExtYieldDev.4YearAve, bs = 'cr', k = ksel) +
                   REER_SD + BeginStockRatio + perCapitaGDPShock +
                   factor(Country) + factor(City) + factor(MarketChain) + factor(mktYear),
                 data = filter(RegressionDat, DomYieldShock >= -0.6))

gamRegRB4 <- gam(deTrendQuadratic.SD ~ s(DomYieldShock, bs = 'cr', k = ksel) +
                   s(ExtYieldDev.4YearAve, bs = 'cr', k = ksel) +
                   REER_SD + BeginStockRatio + perCapitaGDPShock +
                   factor(Country) + factor(City) + factor(MarketChain) + factor(mktYear),
                 data = filter(RegressionDat, DomYieldShock >= -0.6))

gamRegRB5 <- gam(deTrendSpline.SD ~ s(DomYieldShock, bs = 'cr', k = ksel) +
                   s(ExtYieldDev.4YearAve, bs = 'cr', k = ksel) +
                   REER_SD + BeginStockRatio + perCapitaGDPShock +
                   factor(Country) + factor(City) + factor(MarketChain) + factor(mktYear),
                 data = filter(RegressionDat, DomYieldShock >= -0.6))

plotData3 <- bind_rows(plotDataFunc(gamRegRB1, k = 1) %>% mutate(Label = 'Cubic'),
                       plotDataFunc(gamRegRB2, k = 1) %>% mutate(Label = 'HP'),
                       plotDataFunc(gamRegRB3, k = 1) %>% mutate(Label = 'Linear'),
                       plotDataFunc(gamRegRB4, k = 1) %>% mutate(Label = 'Quadratic'),
                       plotDataFunc(gamRegRB5, k = 1) %>% mutate(Label = 'Spline'))

g3 <-
  ggplot(data = plotData3) +
  geom_line(aes(x, y, group = Label)) +
  #geom_line(aes(x, y + ysd, group = Label), lty = 2) +
  #geom_line(aes(x, y - ysd, group = Label), lty = 2) +
  scale_x_continuous(breaks = seq(-0.5, 0.6, by = 0.1)) +
  scale_y_continuous(breaks = seq(-0.2, 0.1, by = 0.02)) +
  labs(x = 'Domestic maize yield shocks', y = 'Fitted value of the smooth function',
       title = 'B1. Alternative specification of maize price trends: \ndomestic yield shocks') +
  theme_classic() +
  theme(axis.text = element_text(color = 'black'),
        title = element_text(size = 10))

g3

plotData4 <- bind_rows(plotDataFunc(gamRegRB1, k = 2) %>% mutate(Label = 'Cubic'),
                       plotDataFunc(gamRegRB2, k = 2) %>% mutate(Label = 'HP'),
                       plotDataFunc(gamRegRB3, k = 2) %>% mutate(Label = 'Linear'),
                       plotDataFunc(gamRegRB4, k = 2) %>% mutate(Label = 'Quadratic'),
                       plotDataFunc(gamRegRB5, k = 2) %>% mutate(Label = 'Spline'))


g4 <-
  ggplot(data = plotData4) +
  geom_line(aes(x, y, group = Label)) +
  #geom_line(aes(x, y + ysd, group = Label), lty = 2) +
  #geom_line(aes(x, y - ysd, group = Label), lty = 2) +
  #scale_x_continuous(breaks = seq(-0.3, 0.3, by = 0.1)) +
  scale_y_continuous(breaks = seq(-0.2, 0.1, by = 0.02)) +
  labs(x = 'Foreign maize yield shocks', y = 'Fitted value of the smooth function',
       title = 'B2. Alternative specification of maize price trends: \nforeign yield shocks') +
  theme_classic() +
  theme(axis.text = element_text(color = 'black'),
        title = element_text(size = 10))

g4

### Alternative specification of k for constructing foreign yield shocks.
gamRegRB1K1 <- gam(deTrendCubic.SD ~ s(DomYieldShock, bs = 'cr', k = ksel) +
                     s(ExtYieldDev.4YearAve, bs = 'cr', k = ksel) +
                     REER_SD + BeginStockRatio + perCapitaGDPShock +
                     factor(Country) + factor(City) + factor(MarketChain) + factor(mktYear),
                   data = filter(RegressionDat, DomYieldShock >= -0.6))

gamRegRB1K2 <- gam(deTrendCubic.SD ~ s(DomYieldShock, bs = 'cr', k = ksel) +
                     s(ExtYieldDev.3YearAve, bs = 'cr', k = ksel) +
                     REER_SD + BeginStockRatio + perCapitaGDPShock +
                     factor(Country) + factor(City) + factor(MarketChain) + factor(mktYear),
                   data = filter(RegressionDat, DomYieldShock >= -0.6))

gamRegRB1K3 <- gam(deTrendCubic.SD ~ s(DomYieldShock, bs = 'cr', k = ksel) +
                     s(ExtYieldDev.2YearAve, bs = 'cr', k = ksel) +
                     REER_SD + BeginStockRatio + perCapitaGDPShock +
                     factor(Country) + factor(City) + factor(MarketChain) + factor(mktYear),
                   data = filter(RegressionDat, DomYieldShock >= -0.6))

plotData5 <- bind_rows(plotDataFunc(gamRegRB1K1, k = 2) %>% mutate(Label = '4'),
                       plotDataFunc(gamRegRB1K2, k = 2) %>% mutate(Label = '3'),
                       plotDataFunc(gamRegRB1K3, k = 2) %>% mutate(Label = '2'))

g5 <-
  ggplot(data = plotData5) +
  geom_line(aes(x, y, group = Label)) +
  #scale_x_continuous(breaks = seq(-0.3, 0.3, by = 0.1)) +
  scale_y_continuous(breaks = seq(-0.2, 0.1, by = 0.02)) +
  labs(x = 'Foreign maize yield shocks', y = 'Fitted value of the smooth function',
       title = 'C. Different lagged import data for constructing \nforeign yield shocks') +
  theme_classic() +
  theme(axis.text = element_text(color = 'black'),
        title = element_text(size = 10))
g5

g <- grid.arrange(g1, g2, g3, g4, g5, ncol = 2)


ggsave(filename = '../Dropbox (Personal)/ExtShock/4_TablesFigures/FigRobustness.png',
       plot = g, width = 240, height = 220, units = 'mm')

# Robustness check.
